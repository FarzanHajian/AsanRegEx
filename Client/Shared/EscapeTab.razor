@inject RegexService regexService
@inject CacheService cacheService
@inject ToastService toastService

<EditForm Model="@requestModel" OnSubmit="@OnSubmit">
    <label for="input" class="form-label">Input String</label>
    <div class="input-group mb-3">
        <CacheList DataSource="@cacheService.GetCachedData(CacheService.ESCAPE_CACHE)" OnSelect="(input)=>requestModel.Input = input" />
        <input type="text" class="form-control" id="input" @bind-value="@requestModel.Input" autocomplete="off" required>
    </div>

    <div class="row justify-content-center mb-3">
        <div class="col text-center">
            <SubmitButton Text="Escape"  OnClick="@(()=>isEscape = true)" Style="width:9rem" />
            <SubmitButton Text="Unescape" OnClick="@(()=>isEscape = false)" Style="width:9rem" />
        </div>
    </div>
</EditForm>

<hr />

@code {
    private EscapeRequestModel requestModel = new();
    private bool isEscape = true;
    
    private void OnSubmit()
    {
        try
        {
            string old = requestModel.Input;
            if(isEscape)
                regexService.EscapeString(requestModel);
            else
                regexService.UnescapeString(requestModel);
            cacheService.StoreDataInCache(CacheService.ESCAPE_CACHE, old);
        }
        catch (Exception ex)
        {
            toastService.Notify(new(ToastType.Danger, ex.Message));
        }
    }
}
