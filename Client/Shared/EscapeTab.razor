@inject RegexService RegexService
@inject CacheService CacheService
@inject ToastService ToastService

<EditForm Model="@requestModel" OnSubmit="@OnSubmit">
    <label for="input" class="form-label">Input String</label>
    <div class="input-group mb-3">
        <CacheList DataSource="@CacheService.GetCachedData(CacheService.ESCAPE_CACHE)" OnSelect="(input)=>requestModel.Input = input" />
        <input type="text" class="form-control" id="input" @bind-value="@requestModel.Input" autocomplete="off" required>
    </div>

    <div class="row justify-content-center mb-3">
        <div class="col text-center">
            <SubmitButton Text="Escape"  OnClick="@(()=>isEscape = true)" Style="width:9rem" />
            <SubmitButton Text="Unescape" OnClick="@(()=>isEscape = false)" Style="width:9rem" />
        </div>
    </div>
</EditForm>

<hr />

@if (escapeResult is not null)
{
    <input class="form-control" @bind="@escapeResult" disabled></input>
}

@code {
    private EscapeRequestModel requestModel = new();
    private string? escapeResult = null;
    private bool isEscape = true;

    private void OnSubmit()
    {
        try
        {
            escapeResult = isEscape ? RegexService.EscapeString(requestModel) : RegexService.UnescapeString(requestModel);
            CacheService.StoreDataInCache(CacheService.ESCAPE_CACHE, requestModel.Input);
        }
        catch (Exception ex)
        {
            ToastService.Notify(new(ToastType.Danger, ex.Message));
        }
    }
}
